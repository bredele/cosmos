#!/usr/bin/env node

/**
 * Module dependencies.
 */

var Command = require('commander').Command;
var express = require('express');
var pkg = require('../package');
var cwd = process.cwd();
var path = require('path');

/**
 * Test server.
 */

var app = express();


/**
 * End logger output.
 */

process.on('exit', function () {
  if (!quiet) logger.end();
  if (hasError) process.exit(1);
});


/**
 * Program.
 */

var program = new Command('cosmos')
  .version(pkg.version)
  .usage('[options] command|[file, ...]')
  .option('-p, --port', 'test port server', 8050)
  .parse(process.argv);


/**
 * Help.
 */

program.on('--help', function () {
  console.log('  Usage:');
  console.log();
  console.log('  # launch cosmos app on default port');
  console.log('  $ cosmos');
  console.log();
  console.log('  # test cosmos app on specific port');
  console.log('  $ cosmos --port 8080');
  console.log();
  console.log('  Commands:');
  console.log();
  console.log('    install      install dependencies for a file.');
  console.log('    ls           list all dependencies.');
  console.log('    duplicates   show all duplicates.');
  console.log();
  process.exit(0);
});


/**
 * Return cosmos component.
 * @note it is static right now
 * but we should be able to re-render
 * a cosmos app.
 */

app.get('/', function(req, res) {
	var cosmos = require(cwd + '/index.js');
	// @note should have a reload handler
  res.send(cosmos.el.outerHTML);
});

app.listen(8050);