#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var path = require('path');
var join = path.join;
var fs = require('fs');
var join = path.join;
var exists = fs.existsSync;
var spawn = require('win-fork');
var utils = require('../utils/utils');
var app = require('..').app;


// usage

program
  .version(require('../package').version)
  .usage('<command> [options]');


// sub-command help

program.on('--help', function(){
  console.log('  Commands:');
  console.log();
  console.log('    install [name ...]      install one or more cosmos projects');
  console.log('    search [query]          search with the given query');
  console.log('    wiki                    open the cosmos wiki page');
  console.log();
  process.exit();
});


process.title = 'cosmos';


// parse argv

program.parse(process.argv);


// args void of cmd

var args = process.argv.slice(3);


// command

var cmd = program.args[0];


// display help

if (!cmd) {
  app.listen(3001);
  utils.log('server running', 'listening on port 3001');
} else {

  // executable

  var bin = 'cosmos-' + cmd;


  // local or resolve to absolute executable path

  var local = join(__dirname, bin);


  // display help if bin does not exist

  if (!exists(local)) {
    console.error('\n  %s(1) does not exist', bin);
    program.help();
  }

  // spawn

  var proc = spawn(local, args, { stdio: 'inherit', customFds: [0, 1, 2] });

  proc.on('close', function(code){
    process.exit(code);
  });

}