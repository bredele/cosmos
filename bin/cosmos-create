#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var path = require('path');
var fs = require('fs');
var join = path.join;
var read = fs.readFileSync;
var readdir = fs.readdirSync;
var exists = fs.existsSync;
var mkdir = require('mkdirp').sync;
var utils = require('../utils/utils');
var copy = require('wrench').copyDirSyncRecursive;

// usage

program.usage('[template]');


// options

program
  .parse(process.argv);


/**
 * Examples.
 */

program.on('--help', function(){
  console.log('  Examples:');
  console.log();
  console.log('    # create cosmos project from jekyll template');
  console.log('    $ cosmos create jekyll');
  console.log();
});



// config

var conf = {};


// dest

var tmpl = program.args[0] || '.';
//NOTE: if repo/name, we first install!


/**
 * Verbose write.
 */

function write(path, str) {
  if (exists(path)) {
    utils.warn('exists', path);
  } else {
    utils.log('create', path);
    fs.writeFileSync(path, str);
  }
}

//name: '\033[36mname\033[m : ',
var prompt = {
  name: 'name : ',
  description: 'description : '
};

// prompt

program.prompt(prompt, function(obj){
	var name = obj.name;

  // populate json
  conf.name = name;
  conf.description = obj.description;
  conf.version = "0.0.0";
  conf.plugins = {};

  if(exists(name)) {
    console.log();
    utils.fatal(name + ' directory already exists');
  }

  // dir
  console.log();
  utils.log('create', name);
  //mkdir(dir);
  try {
    var from = path.resolve(__dirname, '../templates/' + tmpl);
    var to =  path.resolve('.') + '/' + name;
    copy(from, to, function (err) {
     if (err) {
       //return utils.warn(conf.type + " doesn't exist");
     }
     utils.log('clone', tmpl);
    });
  } catch(e) {
    utils.warn('warning', tmpl + " template doesn't exist.");
    mkdir(name);
  }

  // write roach.json
  write(join(name, 'cosmos.json'), JSON.stringify(conf, null, 2));

  console.log();
  process.exit();
});